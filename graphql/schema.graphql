scalar Date

type User {
    id: ID!
    username: String!
    email: String
    role: Role!
    phone: String
    school: School!
}

type School {
    id: ID!
    name: String!
    region: Region!
    address: String
    email: String
    phone: String!
    schoolCode: String!
    imageUrl: String
    level: Level!
}

type Country {
    id: ID!
    name: String!
}

type Region {
    id: ID!
    name: String!
    country: Country
}

type GeneralResponse {
    message: String
    error: Error
}

type SchoolResponse {
    payload: School
    error: Error
}

type AuthPayload {
    token: String
    user: User
}

type Error {
    message: String!
    field: String!
}

type AuthResponse {
    payload: AuthPayload
    error: Error
}

input SignUpInput {
    username: String!
    email: String
    phone: String
    role: Role
    school: SchoolCreateOneInput!
    password: String!
}

input LoginInput {
    email: String
    phone: String
    password: String!
}

input RegionQueryInput {
    id: String!
}
input SchoolCreateInput {
    name: String!
    region: RegionCreateOneInput!
    address: String
    email: String
    phone: String!
    schoolCode: String!
    imageUrl: String
    level: Level
}

input RegionCreateOneInput {
    connect: RegionWhereUniqueInput
}

input SchoolCreateOneInput {
    connect: SchoolWhereUniqueInput
}

input RegionWhereUniqueInput {
    id: ID
}

input SchoolWhereUniqueInput {
    schoolCode: String
}

enum Role {
    ADMIN
    TEACHER
    PARENT
    ACCOUNTANT
    STOREMAN
    USER
}

enum Level {
    PRESCHOOL
    PRIMARY
    HIGHSCHOOL
    GENERAL
}
