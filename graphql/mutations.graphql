type Mutation {
    """
    Handle user signup
    """
    signup(input: SignUpInput!): GeneralResponse!

    """
    Login and authenticate user
    """
    login(input: LoginInput!): AuthResponse!

    """
    Create school
    """
    school(input: SchoolCreateInput!): SchoolResponse!

    """
    Update a school
    """
    updateSchool(data: SchoolUpdateInput!, where: SchoolWhereUniqueInput): SchoolResponse

    """
    Update a user
    """
    updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput): AuthResponse

    """
    Create a country
    """
    createCountry(input: CountryCreateInput!): Country!

    """
    Update a country
    """
    updateCountry(data: CountryUpdateInput!, where: CountryWhereUniqueInput!): Country

    """
    Create a Region
    """
    createRegion(input: RegionCreateInput!): Region!
    """
    Update a region
    """
    updateRegion(data: RegionUpdateInput!, where: RegionWhereUniqueInput!): Region

    """
    Create a classroom
    """
    classRoom(input: ClassroomCreateInput!): ClassroomResponse!

    """
    Update a classroom
    """
    updateClassRoom(data: ClassroomUpdateInput!, where: ClassroomWhereUniqueInput): Classroom

    """
    Create a subject
    """
    addSubject(input: SubjectCreateInput!): SubjectResponse!

    """
    Update a subject
    """
    updateSubject(data: SubjectUpdateInput!, where: SubjectWhereUniqueInput): SubjectResponse

    """
    Create a class level
    """
    addClassLevel(input: ClassLevelCreateInput!): AddClassLevelResponse!

    """
    Create a class subject
    """
    addClassSubject(input: ClassSubjectCreateInput!): ClassSubjectResponse!

    """
    Update a subject
    """
    updateClassSubject(data: ClassSubjectUpdateInput!, where: ClassSubjectWhereUniqueInput): ClassSubjectResponse

    """
    Create a student
    """
    addStudent(input: StudentCreateInput!): StudentResponse!

    """
    Update a student
    """
    updateStudent(data: StudentUpdateInput!, where: StudentWhereUniqueInput): StudentResponse

    """
    Add a timetable
    """
    addClassTimetable(input: [TimeTableCreateInput!]): TimetableResponse!
}
